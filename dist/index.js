import l from"arg";function d(t){let s=new URL(t).searchParams.get("argv"),e=[];return s!==null&&(e=s.split(" ")),e}async function y(t,s){if(t.headers.get("authorization")!==`Bearer ${process.env.RCMD_SECRET}`)return{status:401,body:{success:!1}};try{let r=d(t.url);return await s(r),{status:200,body:{success:!0}}}catch(r){return{status:500,body:{success:!1,error:r}}}}async function v(t,s,e){return y(t,async r=>{let o=l(s,{permissive:!1,argv:r.slice(3)}),{_:c,...i}=o,n=Object.entries(i).reduce((a,[u,g])=>(a[u.replace("--","")]=g,a),{});await e(...c,n)})}var p=class{_spec;_action;constructor(s,e){this._spec=s,this._action=e}async parse(s){return this._action!==null&&this._spec!==null?y(s,async e=>{let r=l(this._spec,{permissive:!1,argv:e.slice(3)}),{_:o,...c}=r,i=Object.entries(c).reduce((n,[a,u])=>(n[a.replace("--","")]=u,n),{});await this._action(...o,i)}):{status:500,body:{success:!1}}}};export{p as Command,v as parseCmdReq,d as parseCmdUrl,y as processCmdReq};
//# sourceMappingURL=index.js.map